-- Marek Miček, 540461
-- Peter Rúček, 540454

--Report on oldest and newest app version for all device models
-- e.g., for “HUAWEI CUN-L21” and not a particular IMSI/car key.

-- Creating view to make SELECT's faster
CREATE OR REPLACE VIEW DataLogView AS
SELECT * FROM DataLog d JOIN TIME t ON (d.foreign_id = t.time_id)
JOIN Status s ON (d.foreign_id = s.status_id)
JOIN SimCard sc ON (d.foreign_id = sc.sim_card_id)
JOIN Device dev ON (d.foreign_id = dev.device_id);

SELECT tab1.device, tab1.program_ver AS oldest_app_ver, tab2.program_ver AS newest_app_ver
FROM 
    ( SELECT device, program_ver, row_number() OVER (PARTITION BY device ORDER BY program_ver ASC) AS oldRn FROM DataLogView)
    tab1 INNER JOIN 
    ( SELECT device, program_ver, row_number() OVER (PARTITION BY device ORDER BY program_ver DESC) AS newRn FROM DataLogView)
    tab2 ON tab1.device = tab2.device
WHERE oldRn = 1 AND newRn = 1;


-- Merge Join  (cost=2395678.20..4439646.03 rows=5500485 width=18) (actual time=32020.765..47828.888 rows=32 loops=1)
--   Merge Cond: (tab1.device = tab2.device)
--   ->  Subquery Scan on tab1  (cost=1197839.10..2178527.53 rows=33478 width=14) (actual time=17443.828..21607.798 rows=33 loops=1)
--         Filter: (tab1.oldrn = 1)
--         Rows Removed by Filter: 1069014
--         ->  WindowAgg  (cost=1197839.10..2094831.89 rows=6695651 width=22) (actual time=17443.826..21560.735 rows=1069047 loops=1)
--               ->  Gather Merge  (cost=1197839.10..1977658.00 rows=6695651 width=14) (actual time=17431.749..20155.452 rows=1117735 loops=1)
--                     Workers Planned: 2
--                     Workers Launched: 2
--                     ->  Sort  (cost=1196839.08..1203813.72 rows=2789855 width=14) (actual time=17311.938..17454.708 rows=373781 loops=3)
--                           Sort Key: dev.device, dev.program_ver
--                           Sort Method: external merge  Disk: 34280kB
--                           Worker 0:  Sort Method: external merge  Disk: 34400kB
--                           Worker 1:  Sort Method: external merge  Disk: 34552kB
--                           ->  Parallel Hash Join  (cost=470985.58..802799.57 rows=2789855 width=14) (actual time=13191.067..14514.372 rows=2231887 loops=3)
--                                 Hash Cond: (d.foreign_id = dev.device_id)
--                                 ->  Parallel Hash Join  (cost=354225.24..624222.86 rows=2789855 width=32) (actual time=9907.926..11435.350 rows=2231887 loops=3)
--                                       Hash Cond: (t.time_id = d.foreign_id)
--                                       ->  Parallel Hash Join  (cost=244362.51..463447.25 rows=2789665 width=24) (actual time=5904.125..7586.914 rows=2231887 loops=3)
--                                             Hash Cond: (s.status_id = t.time_id)
--                                             ->  Parallel Hash Join  (cost=108443.47..282062.34 rows=2789665 width=16) (actual time=2414.144..3760.973 rows=2231887 loops=3)
--                                                   Hash Cond: (sc.sim_card_id = s.status_id)
--                                                   ->  Parallel Seq Scan on simcard sc  (cost=0.00..126659.60 rows=3454960 width=8) (actual time=0.643..524.377 rows=2763984 loops=3)
--                                                   ->  Parallel Hash  (cost=62674.65..62674.65 rows=2789665 width=8) (actual time=1239.894..1239.895 rows=2231887 loops=3)
--                                                         Buckets: 131072  Batches: 128  Memory Usage: 3136kB
--                                                         ->  Parallel Seq Scan on status s  (cost=0.00..62674.65 rows=2789665 width=8) (actual time=0.548..380.409 rows=2231887 loops=3)
--                                             ->  Parallel Hash  (cost=90145.02..90145.02 rows=2790002 width=8) (actual time=1104.475..1104.476 rows=2231887 loops=3)
--                                                   Buckets: 131072  Batches: 128  Memory Usage: 3136kB
--                                                   ->  Parallel Seq Scan on "time" t  (cost=0.00..90145.02 rows=2790002 width=8) (actual time=0.222..358.247 rows=2231887 loops=3)
--                                       ->  Parallel Hash  (cost=64091.55..64091.55 rows=2789855 width=8) (actual time=1190.431..1190.432 rows=2231887 loops=3)
--                                             Buckets: 131072  Batches: 128  Memory Usage: 3136kB
--                                             ->  Parallel Seq Scan on datalog d  (cost=0.00..64091.55 rows=2789855 width=8) (actual time=1.432..374.052 rows=2231887 loops=3)
--                                 ->  Parallel Hash  (cost=65533.93..65533.93 rows=2790193 width=22) (actual time=1027.320..1027.320 rows=2231887 loops=3)
--                                       Buckets: 65536  Batches: 128  Memory Usage: 3104kB
--                                       ->  Parallel Seq Scan on device dev  (cost=0.00..65533.93 rows=2790193 width=22) (actual time=0.730..386.957 rows=2231887 loops=3)
--   ->  Materialize  (cost=1197839.10..2178611.23 rows=33478 width=14) (actual time=14576.931..26220.952 rows=33 loops=1)
--         ->  Subquery Scan on tab2  (cost=1197839.10..2178527.53 rows=33478 width=14) (actual time=14576.925..26220.894 rows=33 loops=1)
--               Filter: (tab2.newrn = 1)
--               Rows Removed by Filter: 1069014
--               ->  WindowAgg  (cost=1197839.10..2094831.89 rows=6695651 width=22) (actual time=14576.922..26174.941 rows=1069047 loops=1)
--                     ->  Gather Merge  (cost=1197839.10..1977658.00 rows=6695651 width=14) (actual time=14564.642..23803.648 rows=6695660 loops=1)
--                           Workers Planned: 2
--                           Workers Launched: 2
--                           ->  Sort  (cost=1196839.08..1203813.72 rows=2789855 width=14) (actual time=14481.945..15222.785 rows=2231887 loops=3)
--                                 Sort Key: dev_1.device, dev_1.program_ver DESC
--                                 Sort Method: external merge  Disk: 34272kB
--                                 Worker 0:  Sort Method: external merge  Disk: 34656kB
--                                 Worker 1:  Sort Method: external merge  Disk: 34280kB
--                                 ->  Parallel Hash Join  (cost=470985.58..802799.57 rows=2789855 width=14) (actual time=10561.915..11756.983 rows=2231887 loops=3)
--                                       Hash Cond: (d_1.foreign_id = dev_1.device_id)
--                                       ->  Parallel Hash Join  (cost=354225.24..624222.86 rows=2789855 width=32) (actual time=7686.965..8933.278 rows=2231887 loops=3)
--                                             Hash Cond: (t_1.time_id = d_1.foreign_id)
--                                             ->  Parallel Hash Join  (cost=244362.51..463447.25 rows=2789665 width=24) (actual time=5097.563..6292.318 rows=2231887 loops=3)
--                                                   Hash Cond: (s_1.status_id = t_1.time_id)
--                                                   ->  Parallel Hash Join  (cost=108443.47..282062.34 rows=2789665 width=16) (actual time=2213.863..3541.731 rows=2231887 loops=3)
--                                                         Hash Cond: (sc_1.sim_card_id = s_1.status_id)
--                                                         ->  Parallel Seq Scan on simcard sc_1  (cost=0.00..126659.60 rows=3454960 width=8) (actual time=0.536..568.846 rows=2763984 loops=3)
--                                                         ->  Parallel Hash  (cost=62674.65..62674.65 rows=2789665 width=8) (actual time=933.019..933.020 rows=2231887 loops=3)
--                                                               Buckets: 131072  Batches: 128  Memory Usage: 3136kB
--                                                               ->  Parallel Seq Scan on status s_1  (cost=0.00..62674.65 rows=2789665 width=8) (actual time=0.521..316.068 rows=2231887 loops=3)
--                                                   ->  Parallel Hash  (cost=90145.02..90145.02 rows=2790002 width=8) (actual time=1088.037..1088.038 rows=2231887 loops=3)
--                                                         Buckets: 131072  Batches: 128  Memory Usage: 3136kB
--                                                         ->  Parallel Seq Scan on "time" t_1  (cost=0.00..90145.02 rows=2790002 width=8) (actual time=0.248..402.829 rows=2231887 loops=3)
--                                             ->  Parallel Hash  (cost=64091.55..64091.55 rows=2789855 width=8) (actual time=879.370..879.371 rows=2231887 loops=3)
--                                                   Buckets: 131072  Batches: 128  Memory Usage: 3136kB
--                                                   ->  Parallel Seq Scan on datalog d_1  (cost=0.00..64091.55 rows=2789855 width=8) (actual time=1.149..308.891 rows=2231887 loops=3)
--                                       ->  Parallel Hash  (cost=65533.93..65533.93 rows=2790193 width=22) (actual time=1013.814..1013.815 rows=2231887 loops=3)
--                                             Buckets: 65536  Batches: 128  Memory Usage: 3104kB
--                                             ->  Parallel Seq Scan on device dev_1  (cost=0.00..65533.93 rows=2790193 width=22) (actual time=0.461..404.682 rows=2231887 loops=3)
-- Planning Time: 34.996 ms
-- Execution Time: 48326.135 ms


-- 32 rows returned
--          device   |   oldest_app_ver | newest_app_ver
-- 1	A1-734	                A47	        A47
-- 2	AMN-LX9	                A51	        A59
-- 3	DRA-L21	                A44	        A59
-- 4	DUB-LX1	                A54	        A59
-- 5	F1	                    A59	        A59
-- 6	HUAWEI CUN-L21	        A44	        A59
-- 7	HUAWEI Y210-0100	    A42	        A42
-- 8	HUAWEI Y330-U01	        A44	        A44
-- 9	JAT-L41	                A57	        A59
-- 10	JSN-L21	                A54	        A56
-- 11	Lenovo PB1-750M	        A50	        A59
-- 12	Lenovo TAB 2 A7-30HC	A29	        A51
-- 13	LG-D620	                A46	        A46
-- 14	M2006C3LG	            A59	        A59
-- 15	M2006C3MNG	            A59	        A59
-- 16	Mi A1	                A52	        A53
-- 17	MRD-LX1	                A51	        A51
-- 18	MYA-L41	                A46	        A59
-- 19	PRA-LX1	                A59	        A59
-- 20	Redmi 4X	            A51	        A59